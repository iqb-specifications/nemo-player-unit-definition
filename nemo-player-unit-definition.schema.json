{
  "$id": "nemo-player-unit-definition@0.6",
  "$schema": "http://json-schema.org/draft-07/schema#",
  "title": "Nemo Player Unit Definition",
  "description": "Specification for the unit definition of the nemo player.",
  "type": "object",

  "properties": {
    "id": {
      "const": "nemo-player-unit-definition",
      "description": "Ensures that this is the right definition type"
    },
    "version": {
      "type": "string",
      "default": "0.6",
      "description": "Version to better support legacy definitions."
    },
    "backgroundColor": {
      "type": "string",
      "description": "web-color",
      "examples": ["#ffaa56", "#ff1"],
      "default": "#fff"
    },
    "continueButtonShow": {
      "type": "string",
      "description": "Rule if the navigation button to continue is presented",
      "enum": [
        "NO",
        "ALWAYS",
        "ON_INTERACTION",
        "ON_ANY_RESPONSE",
        "ON_FULL_CREDIT"
      ],
      "default": "ALWAYS"
    },
    "mainAudio": {
      "type": "object",
      "description": "Parameters and source for main audio sequence used via upper left button.",
      "properties": {
        "audioSource": {
          "type": "string",
          "description": "base64 coded string "
        },
        "firstClickLayer": {
          "type": "boolean",
          "description": "If true, an overlapping click area covers all available player space to catch first click to start audio.",
          "default": false
        },
        "animateButton": {
          "type": "boolean",
          "description": "If true, the audio trigger button is a bit moving to demand attention.",
          "default": false
        },
        "maxPlay": {
          "type": "integer",
          "description": "Maximum number of plays. If '0', then no limit exists.",
          "default": 0
        }
      },
      "required": ["audioSource"],
      "additionalProperties": false
    },
    "interactionType": {
      "type": "string",
      "description": "Type of interaction",
      "enum": [
        "BUTTONS",
        "DROP",
        "WRITE",
        "FIND_ON_IMAGE"
      ]
    },
    "interactionParameters": {
      "description": "Every interaction type needs a different set of parameters.",
      "oneOf": [
        {
          "$ref": "#/definitions/parametersButtons"
        },
        {
          "$ref": "#/definitions/parametersDrop"
        },
        {
          "$ref": "#/definitions/parametersWrite"
        },
        {
          "$ref": "#/definitions/parametersFindOnImage"
        }
      ]
    },
    "coding": {
      "type": "array",
      "description": "Rules for coding and scoring the values",
      "items": {
        "$ref": "#/definitions/coding"
      },
      "minItems": 1
    },
    "audioFeedback": {
      "type": "object",
      "description": "",
      "properties": {
        "continueButtonAsTrigger": {
          "type": "boolean",
          "description": "This will show the continue button unless other rules defined in 'continueButtonShow'. Audio feedback will not be given on every response but on continue button click. After playing feedback, the continue button triggers following rules defined in 'continueButtonShow'.",
          "default": false
        },
        "feedback": {
          "type": "array",
          "description": "The feedback will be played for the variable just changed.",
          "items": {
            "$ref": "#/definitions/audioFeedback"
          },
          "minItems": 1
        }
      }
    }
  },
  "required": [
    "id",
    "interactionType"
  ],
  "additionalProperties": false,
  "definitions": {
    "option": {
      "description": "Text, image or icon are valid defintions of one button",
      "oneOf": [
        {
          "type": "object",
          "properties": {
            "text": {
              "type": "string",
              "description": "Will be cropped if not enough space is given."
            }
          }
        }, {
          "type": "object",
          "properties": {
            "imageSource": {
              "type": "string",
              "description": "Image base64-coded"
            }
          }
        }, {
          "type": "object",
          "properties": {
            "icon": {
              "type": "string",
              "description": "Icon provided by player",
              "enum": [
                "CHECK_GREEN",
                "CLOSE_RED",
                "CLAP_HANDS"
              ]
            }
          }
        }
      ]
    },
    "repeatButton": {
      "type": "object",
      "description": "Repeat one selection button several times",
      "properties": {
        "option": {
          "$ref": "#/definitions/option"
        },
        "numberOfOptions": {
          "type": "integer",
          "description": "Number of options. Every option carries a growing number of hand clapping images.",
          "default": 5
        }
      }

    },
    "parametersButtons": {
      "type": "object",
      "description": "These parameters will be used for interactionType BUTTONS",
      "properties": {
        "variableId": {
          "type": "string",
          "description": "Name of the variable stored as id in the response data object.",
          "default": "BUTTONS"
        },
        "imageSource": {
          "type": "string",
          "description": "Stimulus image base64-coded."
        },
        "imagePosition": {
          "type": "string",
          "description": "Position of stimulus image",
          "enum": [
            "TOP",
            "LEFT"
          ],
          "default": "LEFT"
        },
        "text": {
          "type": "string",
          "description": "Stimulus text."
        },
        "textPosition": {
          "type": "string",
          "description": "Position of stimulus text",
          "enum": [
            "ABOVE_IMAGE",
            "ABOVE_BUTTONS",
            "BOTTOM"
          ],
          "default": "BOTTOM"
        },
        "buttonType": {
          "type": "string",
          "description": "Variant of button styling",
          "enum": [
            "BIG_SQUARE",
            "MEDIUM_SQUARE",
            "SMALL_SQUARE",
            "LONG_TEXT",
            "SHORT_TEXT",
            "CIRCLE"
          ],
          "default": "MEDIUM_SQUARE"
        },
        "multiSelect": {
          "type": "boolean",
          "description": "If true, more than one option can be selected.",
          "default": false
        },
        "numberOfRows": {
          "type": "integer",
          "description": "The options are arranged in exact this number of rows regardless of the given space (no responsiveness). If an odd number of options is given, the upper row will contain of more options.",
          "default": 1
        },
        "options" : {
          "oneOf": [
            {
              "type": "object",
              "description": "List of buttons.",
              "properties": {
                "buttons": {
                  "type": "array",
                  "items": {
                    "$ref": "#/definitions/option"
                  },
                  "minItems": 1
                }
              }
            }, {
              "type": "object",
              "description": "Repeat one button.",
              "properties": {
                "repeatButton": {
                  "$ref": "#/definitions/repeatButton"
                }
              }
            }
          ]
        }
      },
      "required": ["options"],
      "additionalProperties": false
    },
    "parametersDrop": {
      "type": "object",
      "description": "These parameters will be used for interactionType DROP",
      "properties": {
        "variableId": {
          "type": "string",
          "description": "Name of the variable stored as id in the response data object.",
          "default": "DROP"
        },
        "imageSource": {
          "type": "string",
          "description": "Image base64-coded, placed at the bottom."
        },
        "text": {
          "type": "string",
          "description": "If an image is given too, this text is used as alt."
        },
        "options": {
          "type": "array",
          "description": "Each option specifies one button.",
          "items": {
            "$ref": "#/definitions/option"
          },
          "minItems": 1
        }
      },
      "required": ["options"],
      "additionalProperties": false
    },
    "parametersWrite": {
      "type": "object",
      "description": "These parameters will be used for interactionType WRITE",
      "properties": {
        "variableId": {
          "type": "string",
          "description": "Name of the variable stored as id in the response data object.",
          "default": "WRITE"
         },
        "imageSource": {
          "type": "string",
          "description": "Image base64-coded, placed at the top."
        },
        "text": {
          "type": "string",
          "description": "If image is given too, this text is used as alt."
        },
        "addBackspaceKey": {
          "type": "boolean",
          "description": "If true, a backspace key is added to the keybboard.",
          "default": true
        },
        "addUmlautKeys": {
          "type": "boolean",
          "description": "If true, keys for umlauts are added to the keyboard.",
          "default": true
        },
        "keysToAdd": {
          "type": "array",
          "description": "All chars/strings in the list are added in a new key row at the bottom. Example: Graphemes",
          "items": {
            "type": "string",
            "minLength": 1
          },
          "examples": ["eu", "au", "ei", "ch", "sch", "ng"],
          "default": []
        },
        "maxInputLength": {
          "type": "integer",
          "description": "Maximal number of characters for input.",
          "default": 10
        }
      },
      "additionalProperties": false
    },
    "parametersFindOnImage": {
      "type": "object",
      "description": "These parameters will be used for interactionType FIND_ON_IMAGE",
      "properties": {
        "variableId": {
          "type": "string",
          "description": "Name of the variable stored as id in the response data object.",
          "default": "FIND_ON_IMAGE"
         },
        "imageSource": {
          "type": "string",
          "description": "Image base64-coded, filling space as much as possible."
        },
        "text": {
          "type": "string",
          "description": "Placed below the image."
        },
        "gridColumns": {
          "type": "integer",
          "description": "Number of columns of the virtual grid placed over the image.",
          "default": 15
        },
        "gridRows": {
          "type": "integer",
          "description": "Number of rows of the virtual grid placed over the image.",
          "default": 10
        }
      },
      "required": ["imageSource"],
      "additionalProperties": false
    },
    "rule": {
      "description": "Operator and value to compare with",
      "type": "object",
      "oneOf": [
        {
          "type": "object",
          "properties": {
            "equalsString": {
              "type": "string"
            }
          },
          "additionalProperties": false
        },
        {
          "type": "object",
          "properties": {
            "equalsNumber": {
              "type": "number"
            }
          },
          "additionalProperties": false
        },
        {
          "type": "object",
          "properties": {
            "greaterThan": {
              "type": "number"
            }
          },
          "additionalProperties": false
        },
        {
          "type": "object",
          "properties": {
            "lessThan": {
              "type": "number"
            }
          },
          "additionalProperties": false
        }
      ]
    },
    "code": {
      "type": "object",
      "description": "If more than one rule is given, the first will go.",
      "properties": {
        "rule": {
          "$ref": "#/definitions/rule"
        },
        "code": {
          "type": "integer"
        },
        "score": {
          "type": "integer"
        }
      },
      "required": ["rule", "code", "score"],
      "additionalProperties": false
    },
    "coding": {
      "type": "object",
      "properties": {
        "variableId": {
           "type": "string",
           "description": "Name of the variable to be coded."
        },
        "source": {
          "type": "string",
          "description": "Where the value for evaluation comes from.",
          "enum": [
            "VALUE",
            "VALUE_TO_UPPER",
            "SUM",
            "LENGTH"
          ],
          "default": "VALUE"
        },
        "codes": {
          "type": "array",
          "description": "First true code will be taken. If not code matches, code and score will be '0'. If the given code list includes code '0', the next available code will be taken.",
          "items": {
            "$ref": "#/definitions/code"
          },
          "minItems": 1
        }
      },
      "required": ["codes"],
      "additionalProperties": false
    },
    "audioFeedback": {
      "type": "object",
      "properties": {
        "variableId": {
           "type": "string",
           "description": "Name of the variable to trigger the feedback."
        },
        "source": {
          "type": "string",
          "description": "Where the value for evaluation comes from.",
          "enum": [
            "VALUE",
            "CODE",
            "SCORE"
          ],
          "default": "CODE"
        },
        "rule": {
          "$ref": "#/definitions/rule"
        },
        "audioSource": {
          "type": "string",
          "description": "base64 coded string for audio sequence used via upper left button"
        }
      },
      "required": ["variableId", "rule", "audioSource"],
      "additionalProperties": false
    }
  }
}